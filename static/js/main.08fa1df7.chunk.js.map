{"version":3,"sources":["App.js","Probability.js","Solver.js","Error.js","Navbar.js","Footer.js","index.js"],"names":["useStyles","makeStyles","theme","body","margin","marginBottom","spacing","textField","marginLeft","marginRight","marginTop","buttons","textAlign","buttonMargin","input","width","minHeight","resize","fontSize","alert","spaceButton","App","classes","inputProps","useState","keywordInput","setKeywordInput","cipherInput","setCipherInput","plainInput","setPlainInput","showAlert","setShowAlert","alertMessage","setAlertMessage","className","Typography","variant","TextareaAutosize","spellCheck","InputProps","value","rows","onChange","e","target","onClick","replace","length","repeat","Math","ceil","substring","toUpperCase","label","Alert","severity","style","opacity","Button","adjustResult","i","charAt","newChar","toLowerCase","charCodeAt","String","fromCharCode","encipher","size","color","decipher","data","require","probability","fontFamily","Probability","cipher","TextField","InputLabelProps","shrink","disabled","cipherProbability","j","k","getProbability","trim","multiline","height","keywordSlider","slider","fontWeight","Solver","plaintext","setPlaintext","setSlider","Slider","step","max","newValue","adjustKeyword","adjustPlain","keyword","maxLength","errorIcon","Error","appBarOption","a","textDecoration","Navbar","AppBar","position","Toolbar","appBarMain","to","exact","path","component","status","footer","top","bottom","source","Footer","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08fa1df7.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport {TextareaAutosize, Typography, Button} from '@material-ui/core';\nimport {Alert} from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    margin: 0,\n    marginBottom: theme.spacing(8),\n  },\n\n  textField: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginTop: theme.spacing(1),\n  },\n\n  buttons: {\n    marginTop: '5px',\n    textAlign: 'center',\n  },\n\n  buttonMargin: {\n    margin: theme.spacing(2),\n  },\n\n  input: {\n    width: '100%',\n    marginTop: theme.spacing(0.5),\n    minHeight: '15px',\n    resize: 'vertical',\n    fontSize: '1.2em',\n  },\n\n  alert: {\n    width: '250px',\n    margin: 'auto',\n  },\n\n  spaceButton: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const inputProps={\n    classes: {\n      input: classes.input,\n    },\n  };\n\n  const [keywordInput, setKeywordInput] = useState('');\n  const [cipherInput, setCipherInput] = useState('');\n  const [plainInput, setPlainInput] = useState('');\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n\n  function encipher() {\n    if (!keywordInput || !plainInput) {\n      setShowAlert(true);\n      setAlertMessage('Please enter plaintext and a key.');\n      return;\n    } else {\n      setShowAlert(false);\n    }\n\n    let adjustResult = '';\n\n    for (let i = 0; i < keywordInput.length; i++) {\n      if (keywordInput.charAt(i) !== ' ') {\n        let newChar = (((plainInput.toLowerCase().charCodeAt(i) % 32) + (keywordInput.toLowerCase().charCodeAt(i) % 32)) - 1);\n        newChar = newChar % 26;\n        if (newChar === 0) newChar += 26;\n\n        adjustResult = adjustResult + String.fromCharCode(96 + newChar);\n      } else {\n        adjustResult = adjustResult + ' ';\n      }\n    }\n\n    setCipherInput(adjustResult.toUpperCase());\n  }\n\n  function decipher() {\n    if (!cipherInput || !keywordInput) {\n      setShowAlert(true);\n      setAlertMessage('Please enter ciphertext and a key.');\n      return;\n    } else {\n      setShowAlert(false);\n    }\n\n    let adjustResult = '';\n\n    for (let i = 0; i < keywordInput.length; i++) {\n      if (keywordInput.charAt(i) !== ' ') {\n        let newChar = (((cipherInput.toLowerCase().charCodeAt(i)-96) - (keywordInput.toLowerCase().charCodeAt(i)-96)));\n        newChar >= 0 ? newChar = newChar % 26 : newChar === 0 ? newChar = newChar + 1 : newChar = newChar + 26;\n        adjustResult = adjustResult + String.fromCharCode(97 + newChar);\n      } else {\n        adjustResult = adjustResult + ' ';\n      }\n    }\n\n    setPlainInput(adjustResult);\n  }\n\n  // Set keyword to same length as cipher\n  function matchLength(){\n    if(keywordInput.length > 0){\n      setKeywordInput(keywordInput.repeat(Math.ceil(cipherInput.length / keywordInput.length)).substring(0, cipherInput.length))\n    }\n  }\n\n  return (\n    <div className={classes.body}>\n      <div className={classes.textField}>\n        <Typography variant=\"h6\">Keyword :</Typography>\n        <TextareaAutosize inputProps={{spellCheck: 'false'}} InputProps={inputProps} value={keywordInput} variant=\"outlined\" rows={5} className={classes.input} onChange={(e) => setKeywordInput(e.target.value)}/>\n        \n        <button className={classes.spaceButton} onClick={(e) => setKeywordInput('')}>Clear</button>\n        <button className={classes.spaceButton} onClick={(e) => setKeywordInput(keywordInput.replace(/\\s+/g, ''))}>Remove Spaces</button>\n        <button className={classes.spaceButton} onClick={(e) => matchLength()}>Match Cipher Length</button>\n      </div>\n\n      <div className={classes.textField}>\n        <Typography variant=\"h6\">Ciphertext :</Typography>\n        <TextareaAutosize InputProps={inputProps} value={cipherInput} variant=\"outlined\" rows={5} className={classes.input} onChange={(e) => setCipherInput(e.target.value.toUpperCase())}/>\n        \n        <button className={classes.spaceButton} onClick={(e) => setCipherInput('')}>Clear</button>\n        <button className={classes.spaceButton} onClick={(e) => setCipherInput(cipherInput.replace(/\\s+/g, ''))}>Remove Spaces</button>\n      </div>\n\n      <div className={classes.textField}>\n        <Typography variant=\"h6\">Plaintext :</Typography>\n        <TextareaAutosize label=\"Plaintext\" InputProps={inputProps} value={plainInput} variant=\"outlined\" rows={5} className={classes.input} onChange={(e) => setPlainInput(e.target.value)}/>\n        \n        <button className={classes.spaceButton} onClick={(e) => setPlainInput('')}>Clear</button>\n        <button className={classes.spaceButton} onClick={(e) => setPlainInput(plainInput.replace(/\\s+/g, ''))}>Remove Spaces</button>\n      </div>\n\n      <div className={classes.buttons}>\n        {showAlert ?\n          <Alert className={classes.alert} severity=\"error\">{alertMessage}</Alert> :\n          <Alert style={{opacity: '0%'}}/>\n        }\n        <Button onClick={(e) => encipher()} className={classes.buttonMargin} size=\"large\" variant=\"contained\" color=\"primary\">Encipher</Button>\n        <Button onClick={() => decipher()} className={classes.buttonMargin} size=\"large\" variant=\"contained\">Decipher</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport {TextField} from '@material-ui/core';\n\nconst data = require('./probability.json');\n\nconst useStyles = makeStyles((theme) => ({\n  probability: {\n    margin: theme.spacing(2),\n    marginBottom: theme.spacing(10),\n  },\n\n  input: {\n    marginTop: theme.spacing(0.5),\n    width: '100%',\n    fontFamily: 'Courier New',\n    fontSize: '1em',\n\n    '& .MuiInputBase-root.Mui-disabled': {\n      color: 'black',\n    },\n  },\n}));\n\n\nfunction Probability(cipher) {\n  const classes = useStyles();\n\n  const inputProps={\n    classes: {\n      input: classes.input,\n    },\n  };\n\n  function getProbability(cipherProbability) {\n    let rows = '';\n\n    for (let i = 0; i < 5; i++) {\n      for (let j = 0; j < cipherProbability.length; j++) {\n        if (cipherProbability.charCodeAt(j) >= 65 && cipherProbability.charCodeAt(j) <= 90) {\n          rows += data[cipherProbability.charAt(j)][i][0][0];\n        } else {\n          rows += ' ';\n        }\n      }\n\n      rows += '\\n';\n\n      for (let k = 0; k < cipherProbability.length; k++) {\n        if (cipherProbability.charCodeAt(k) >= 65 && cipherProbability.charCodeAt(k) <= 90) {\n          rows += data[cipherProbability.charAt(k)][i][0][1];\n        } else {\n          rows += ' ';\n        }\n      }\n\n      rows += '\\n\\n';\n    }\n\n    return rows;\n  }\n\n  return (\n    <div className={classes.probability}>\n      <TextField\n        InputLabelProps={{shrink: true}}\n        InputProps={inputProps}\n        label=\"Probability\"\n        disabled\n        value={cipher.cipher ? getProbability(cipher.cipher).trim() : ''}\n        variant=\"outlined\"\n        multiline rows={14}\n        className={classes.input}/>\n    </div>\n  );\n}\n\nexport default Probability;\n","import React, {useState} from 'react';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport {TextField, Slider} from '@material-ui/core';\n\nimport Probability from './Probability';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    width: '100%',\n    height: '600px',\n    margin: 0,\n  },\n\n  keywordSlider: {\n    textAlign: 'center',\n    marginTop: theme.spacing(1.5),\n  },\n\n  slider: {\n    width: '30%',\n  },\n\n  input: {\n    marginTop: theme.spacing(0.3),\n    width: '100%',\n    fontFamily: 'Courier New',\n    fontWeight: 'bold',\n    fontSize: '1em',\n\n    '& .MuiInputBase-root.Mui-disabled': {\n      color: 'black',\n    },\n  },\n\n  textField: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n\n  spaceButton: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction Solver() {\n  const classes = useStyles();\n\n  const inputProps={\n    classes: {\n      input: classes.input,\n    },\n  };\n\n  const [keywordInput, setKeywordInput] = useState('');\n  const [cipherInput, setCipherInput] = useState('');\n  const [plaintext, setPlaintext] = useState('');\n\n  const [slider, setSlider] = useState(0);\n\n  function sliderChange(e, newValue) {\n    let adjustKeyword = '';\n    let adjustPlain = '';\n\n    // Add spaces to the beginning of the word based on slider value\n    for (var i = 0; i <= newValue - 1; i++) {\n      adjustKeyword = adjustKeyword + ' ';\n    }\n\n    adjustKeyword += keywordInput.trim();\n\n    // Decipher and update plaintext result\n    for (i = 0; i < adjustKeyword.length; i++) {\n      if (adjustKeyword.charAt(i) !== ' ') {\n        let newChar = (((cipherInput.toLowerCase().charCodeAt(i)-96) - (adjustKeyword.toLowerCase().charCodeAt(i)-96)));\n        newChar >= 0 ? newChar = newChar % 26 : newChar === 0 ? newChar = newChar + 1 : newChar = newChar + 26;\n        adjustPlain = adjustPlain + String.fromCharCode(97 + newChar);\n      } else {\n        adjustPlain = adjustPlain + ' ';\n      }\n    }\n\n    setPlaintext(adjustPlain);\n    setKeywordInput(adjustKeyword);\n    setSlider(newValue);\n  }\n\n  function keywordChange(e) {\n    let adjustPlain = '';\n    const keyword = e.target.value;\n\n    // Decipher and update plaintext result\n    for (let i = 0; i < keyword.length; i++) {\n      if (keyword.charAt(i) !== ' ') {\n        let newChar = (((cipherInput.toLowerCase().charCodeAt(i)-96) - (keyword.toLowerCase().charCodeAt(i)-96)));\n        newChar >= 0 ? newChar = newChar % 26 : newChar === 0 ? newChar = newChar + 1 : newChar = newChar + 26;\n        adjustPlain = adjustPlain + String.fromCharCode(97 + newChar);\n      } else {\n        adjustPlain = adjustPlain + ' ';\n      }\n    }\n\n    setKeywordInput(e.target.value);\n    setPlaintext(adjustPlain);\n  }\n\n  function cipherChange(e) {\n    let adjustPlain = '';\n    const cipher = e.target.value;\n\n    // Decipher and update plaintext result\n    for (let i = 0; i < keywordInput.length; i++) {\n      if (keywordInput.charAt(i) !== ' ') {\n        let newChar = (((cipher.toLowerCase().charCodeAt(i)-96) - (keywordInput.toLowerCase().charCodeAt(i)-96)));\n        newChar >= 0 ? newChar = newChar % 26 : newChar === 0 ? newChar = newChar + 1 : newChar = newChar + 26;\n        adjustPlain = adjustPlain + String.fromCharCode(97 + newChar);\n      } else {\n        adjustPlain = adjustPlain + ' ';\n      }\n    }\n\n    setCipherInput(e.target.value.toUpperCase());\n    setPlaintext(adjustPlain);\n  }\n\n  return (\n    <div className={classes.body}>\n      <div className={classes.keywordSlider}>\n        <Slider className={classes.slider} step={1} max={cipherInput && keywordInput ? cipherInput.length - 1 : 0} value={slider} onChange={sliderChange}/>\n      </div>\n      <div className={classes.textField}>\n        <TextField label=\"Keyword\" inputProps={{spellCheck: 'false'}} InputProps={inputProps} value={keywordInput} variant=\"outlined\" className={classes.input} onChange={keywordChange}/>\n\n        <button className={classes.spaceButton} onClick={(e) => setKeywordInput('') & setPlaintext('')}>Clear</button>\n        <button className={classes.spaceButton} onClick={(e) => setKeywordInput(keywordInput.replace(/\\s+/g, ''))}>Remove Spaces</button>\n      </div>\n\n      <div className={classes.textField}>\n        <TextField label=\"Ciphertext\" inputProps={{maxLength: 138, spellCheck: 'false'}} InputProps={inputProps} value={cipherInput} variant=\"outlined\" className={classes.input} onChange={cipherChange}/>\n\n        <button className={classes.spaceButton} onClick={(e) => setCipherInput('') & setPlaintext('')}>Clear</button>\n        <button className={classes.spaceButton} onClick={(e) => setCipherInput(cipherInput.replace(/\\s+/g, ''))}>Remove Spaces</button>\n      </div>\n\n      <div className={classes.textField}>\n        <TextField disabled label=\"Plaintext\" inputProps={{spellCheck: 'false'}} InputLabelProps={{shrink: true}} InputProps={inputProps} value={plaintext} variant=\"outlined\" className={classes.input}/>\n      </div>\n\n      <Probability cipher={cipherInput}/>\n    </div>\n  );\n}\n\nexport default Solver;\n","import React from 'react';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Typography} from '@material-ui/core';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    margin: theme.spacing(20),\n    fontSize: '5em',\n    textAlign: 'center',\n\n  },\n\n  errorIcon: {\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nfunction Error() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.body}>\n      <Typography className={classes.errorIcon} >\n        <SentimentVeryDissatisfiedIcon style={{fontSize: 175}}/>\n      </Typography>\n      <Typography variant=\"h2\">404</Typography>\n      <Typography variant=\"h5\">The page you're looking for was not found.</Typography>\n    </div>\n  );\n}\n\nexport default Error;\n","import React from 'react';\nimport App from './App';\nimport Solver from './Solver';\nimport Error from './Error';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport {AppBar, Toolbar, Typography} from '@material-ui/core';\n\nimport {HashRouter as Router, Switch, Route, Link} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  appBarOption: {\n    marginLeft: theme.spacing(6),\n    marginTop: theme.spacing(1),\n  },\n\n  a: {\n    textDecoration: 'none',\n    color: 'white',\n\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}));\n\nfunction Navbar() {\n  const classes = useStyles();\n\n  return (\n    <Router>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Typography className={classes.appBarMain} variant=\"h5\" color=\"inherit\">\n              Vigenère Variants Tool\n          </Typography>\n          <Typography className={classes.appBarOption} variant=\"h6\" color=\"inherit\">\n            <Link className={classes.a} to=\"/\">Encipher / Decipher</Link>\n          </Typography>\n          <Typography className={classes.appBarOption} variant=\"h6\" color=\"inherit\">\n            <Link className={classes.a} to=\"/solver\">Solver</Link>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Switch>\n        <Route exact path=\"/\" component={App}/>\n        <Route exact path=\"/solver\" component={Solver}/>\n        <Route path=\"/*\" component={Error} status={404}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport {AppBar, Toolbar, Typography} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  a: {\n    textDecoration: 'none',\n    color: 'white',\n\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n\n  footer: {\n    top: 'auto',\n    bottom: 0,\n  },\n\n  source: {\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction Footer() {\n  const classes = useStyles();\n\n  return (\n    <AppBar className={classes.footer} color=\"primary\" position=\"fixed\">\n      <Toolbar variant=\"dense\">\n        <Typography variant=\"subtitle1\" color=\"inherit\">\n              Created by John Lorenzo for CSC 483\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"inherit\" className={classes.source}>\n              ┃\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"inherit\" className={classes.source}>\n          <a className={classes.a} color=\"inherit\" href=\"https://github.com/lorenzoj2/vigenere-variants-tool\">Source</a>\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <Navbar />\n      <Footer />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n"],"sourceRoot":""}