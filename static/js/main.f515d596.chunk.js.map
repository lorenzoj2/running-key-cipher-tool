{"version":3,"sources":["App.js","Solver.js","Navbar.js","Footer.js","index.js"],"names":["useStyles","makeStyles","theme","body","margin","marginBottom","spacing","textField","buttons","marginTop","textAlign","buttonMargin","input","width","minHeight","resize","fontSize","alert","App","classes","inputProps","useState","keywordInput","setKeywordInput","cipherInput","setCipherInput","plainInput","setPlainInput","showAlert","setShowAlert","alertMessage","setAlertMessage","className","Typography","variant","TextareaAutosize","spellCheck","InputProps","value","rows","onChange","e","target","toUpperCase","Alert","severity","style","opacity","Button","onClick","adjustResult","i","length","charAt","newChar","toLowerCase","charCodeAt","String","fromCharCode","encipher","size","color","decipher","keywordSlider","slider","fontFamily","fontWeight","Solver","plaintext","setPlaintext","setSlider","Slider","step","max","trim","newValue","adjustKeyword","adjustPlain","TextField","placeholder","keyword","console","log","maxLength","replace","appBarOption","marginLeft","a","textDecoration","Navbar","AppBar","position","Toolbar","appBarMain","to","path","component","footer","top","bottom","source","Footer","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f515d596.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextareaAutosize, Typography, Button} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    margin: 0,\n    marginBottom: theme.spacing(8),\n  },\n\n  textField: {\n    margin: '20px 20px 0px 20px',\n  },\n\n  buttons: {\n    marginTop: '20px',\n    textAlign: 'center',\n  },\n\n  buttonMargin: {\n    margin: theme.spacing(2)\n  },\n\n  input: {\n    width: '100%',\n    marginTop: theme.spacing(0.5),\n    minHeight: '15px',\n    resize: 'vertical',\n    fontSize: '1.2em',\n  },\n\n  alert: {\n    width: '250px',\n    margin: \"auto\",\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const inputProps={\n    classes: {\n      input: classes.input,\n    },\n  };\n\n  const [keywordInput, setKeywordInput] = useState(\"\")\n  const [cipherInput, setCipherInput] = useState(\"\")\n  const [plainInput, setPlainInput] = useState(\"\")\n\n  const [showAlert, setShowAlert] = useState(false)\n  const [alertMessage, setAlertMessage] = useState(\"\")\n\n  function encipher(e){\n    if(!keywordInput || !plainInput){\n      setShowAlert(true)\n      setAlertMessage(\"Please enter plaintext and a key.\")\n      return\n    }\n    else{\n      setShowAlert(false)\n    }\n\n    var adjustResult = \"\";\n\n    for(var i = 0; i < keywordInput.length; i++){\n      if(keywordInput.charAt(i) !== \" \"){\n        let newChar = (((plainInput.toLowerCase().charCodeAt(i) % 32) + (keywordInput.toLowerCase().charCodeAt(i) % 32)) - 1)\n        newChar = newChar % 26\n        if(newChar === 0) newChar += 26;\n        \n        adjustResult = adjustResult + String.fromCharCode(96 + newChar)\n      }\n      else{\n        adjustResult = adjustResult + \" \"\n      }\n    }\n\n    setCipherInput(adjustResult.toUpperCase())\n  }\n\n  function decipher(){\n    if(!cipherInput || !keywordInput){\n      setShowAlert(true)\n      setAlertMessage(\"Please enter ciphertext and a key.\")\n      return\n    }\n    else{\n      setShowAlert(false)\n    }\n\n    var adjustResult = \"\";\n\n    for(var i = 0; i < keywordInput.length; i++){\n      if(keywordInput.charAt(i) !== \" \"){\n        let newChar = (((cipherInput.toLowerCase().charCodeAt(i)-96) - (keywordInput.toLowerCase().charCodeAt(i)-96)))\n        newChar >= 0 ? newChar = newChar % 26 : newChar === 0 ? newChar = newChar + 1 : newChar = newChar + 26\n        adjustResult = adjustResult + String.fromCharCode(97 + newChar)\n      }\n      else{\n        adjustResult = adjustResult + \" \"\n      }\n    }\n\n    setPlainInput(adjustResult)\n  }\n\n  return (\n    <div className={classes.body}>\n      <div className={classes.textField}>\n            <Typography variant=\"h6\">Keyword :</Typography>\n            <TextareaAutosize inputProps={{spellCheck: \"false\"}} InputProps={inputProps} value={keywordInput} variant=\"outlined\" rows={5} className={classes.input} onChange={(e) => setKeywordInput(e.target.value)}/>\n      </div>\n\n      <div className={classes.textField}>\n            <Typography variant=\"h6\">Ciphertext :</Typography>\n            <TextareaAutosize InputProps={inputProps} value={cipherInput} variant=\"outlined\" rows={5} className={classes.input} onChange={(e) => setCipherInput(e.target.value.toUpperCase())}/>\n      </div>\n\n      <div className={classes.textField}>\n            <Typography variant=\"h6\">Plaintext :</Typography>\n            <TextareaAutosize InputProps={inputProps} value={plainInput} variant=\"outlined\" rows={5} className={classes.input} onChange={(e) => setPlainInput(e.target.value)}/>\n      </div>\n\n      <div className={classes.buttons}>\n        {showAlert ?\n          <Alert className={classes.alert} severity=\"error\">{alertMessage}</Alert> :\n          <Alert style={{opacity: \"0%\"}}/>\n        }\n        <Button onClick={(e) => encipher(e)} className={classes.buttonMargin} size=\"large\" variant=\"contained\" color=\"primary\">Encipher</Button>\n        <Button onClick={() => decipher()} className={classes.buttonMargin} size=\"large\" variant=\"contained\">Decipher</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, {useState} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Slider} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    margin: 0,\n    marginBottom: theme.spacing(8),\n  },\n\n  keywordSlider: {\n    textAlign: 'center',\n    margin: '20px 20px 0px 20px',\n  },\n\n  slider: {\n    width: '30%',\n  },\n\n  input: {\n    marginTop: theme.spacing(0.5),\n    width: '100%',\n    fontFamily: 'Courier New',\n    fontWeight: 'bold',\n  },\n\n  textField: {\n    margin: '20px 20px 0px 20px',\n  }\n\n}));\n\nfunction Solver() {\n  const classes = useStyles();\n\n  const inputProps={\n    classes: {\n      input: classes.input,\n    },\n  };\n\n  const [keywordInput, setKeywordInput] = useState(\"\")\n  const [cipherInput, setCipherInput] = useState(\"\")\n  const [plaintext, setPlaintext] = useState(\"\")\n\n  const [slider, setSlider] = useState(0)\n\n  function sliderChange(e, newValue){\n    var adjustKeyword = \"\";\n    var adjustPlain = \"\";\n\n    // Add spaces to the beginning of the word based on slider value\n    for(var i = 0; i <= newValue - 1; i++){\n      adjustKeyword = adjustKeyword + \" \"\n    }\n\n    adjustKeyword += keywordInput.trim()\n\n    // Decipher and update plaintext result\n    for(i = 0; i < adjustKeyword.length; i++){\n      if(adjustKeyword.charAt(i) !== \" \"){\n        let newChar = (((cipherInput.toLowerCase().charCodeAt(i)-96) - (adjustKeyword.toLowerCase().charCodeAt(i)-96)))\n        newChar >= 0 ? newChar = newChar % 26 : newChar === 0 ? newChar = newChar + 1 : newChar = newChar + 26\n        adjustPlain = adjustPlain + String.fromCharCode(97 + newChar)\n      }\n      else{\n        adjustPlain = adjustPlain + \" \"\n      }\n    }\n\n    setPlaintext(adjustPlain)\n    setKeywordInput(adjustKeyword)\n    setSlider(newValue)\n  }\n\n  function keywordChange(e, newValue) {\n    var adjustPlain = \"\"\n    var keyword = e.target.value\n\n   // Decipher and update plaintext result\n    for(var i = 0; i < keyword.length; i++){\n      console.log(keyword.charAt(i))\n      if(keyword.charAt(i) !== \" \"){\n        let newChar = (((cipherInput.toLowerCase().charCodeAt(i)-96) - (keyword.toLowerCase().charCodeAt(i)-96)))\n        newChar >= 0 ? newChar = newChar % 26 : newChar === 0 ? newChar = newChar + 1 : newChar = newChar + 26\n        adjustPlain = adjustPlain + String.fromCharCode(97 + newChar)\n      }\n      else{\n        adjustPlain = adjustPlain + \" \"\n      }\n    }\n\n    setKeywordInput(e.target.value)\n    setPlaintext(adjustPlain)\n  }\n\n  return (\n    <div className={classes.body}>\n      <div className={classes.keywordSlider}>\n        <Slider className={classes.slider} step={1} max={cipherInput.length - keywordInput.trim().length} value={slider} onChange={sliderChange}/>\n        <TextField inputProps={{spellCheck: \"false\"}} InputProps={inputProps} placeholder=\"Keyword\" value={keywordInput} variant=\"outlined\" rows={2} className={classes.input} onChange={keywordChange}/>\n      </div>\n\n      <div className={classes.textField}>\n        <TextField inputProps={{maxLength: 140, spellCheck: \"false\"}} InputProps={inputProps} placeholder=\"Ciphertext\" value={cipherInput} variant=\"outlined\" rows={2} className={classes.input} onChange={(e) => setCipherInput(e.target.value.toUpperCase().replace(/\\s/g, ''))}/>\n      </div>\n\n      <div className={classes.textField}>\n        <TextField inputProps={{spellCheck: \"false\"}} InputProps={inputProps} placeholder=\"Plaintext\" value={plaintext} variant=\"outlined\" rows={2} className={classes.input}/>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Solver;\n","import React from 'react';\nimport App from './App'\nimport Solver from './Solver'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography} from '@material-ui/core';\n\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBarOption: {\n    marginLeft: theme.spacing(6),\n    marginTop: theme.spacing(1),\n  },\n\n  a: {\n      textDecoration: 'none',\n      color: 'white',\n\n      \"&:hover\": {\n        textDecoration: \"underline\",\n      },\n  },\n}));\n\nfunction Navbar() {\n    const classes = useStyles();\n\n    return (\n    <Router>\n        <AppBar position=\"sticky\">\n          <Toolbar>\n            <Typography className={classes.appBarMain} variant=\"h5\" color=\"inherit\">\n              Vigenère Variants Tool\n            </Typography>\n            <Typography className={classes.appBarOption} variant=\"h6\" color=\"inherit\">\n              <Link className={classes.a} to=\"/\">Encipher / Decipher</Link>\n            </Typography>\n            <Typography className={classes.appBarOption} variant=\"h6\" color=\"inherit\">\n              <Link className={classes.a} to=\"/solver\">Solver</Link>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Switch>\n          <Route path=\"/solver\" component={Solver}/>\n          <Route path=\"/\" component={App}/>\n        </Switch>\n      </Router>\n    )\n}\n\nexport default Navbar;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    a: {\n      textDecoration: 'none',\n      color: 'white',\n\n      \"&:hover\": {\n        textDecoration: \"underline\",\n      },\n    },\n\n    footer: {\n      top: 'auto',\n      bottom: 0,\n    },\n\n    source: {\n      marginLeft: theme.spacing(2.5),      \n    },\n}));\n\nfunction Footer() {\n    const classes = useStyles();\n\n    return (\n        <AppBar className={classes.footer} color=\"primary\" position=\"fixed\">\n          <Toolbar variant=\"dense\">\n            <Typography variant=\"subtitle1\" color=\"inherit\">\n              Created by John Lorenzo for CSC 483 \n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"inherit\" className={classes.source}>\n              ┃\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"inherit\" className={classes.source}>\n              <a className={classes.a} color=\"inherit\" href=\"https://github.com/lorenzoj2/vigenere-variants-tool\">Source</a>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navbar />\n    <Footer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}